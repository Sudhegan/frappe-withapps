name: Build Image

on:
  push:
    branches:
      - main
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build disk space
        uses: easimon/maximize-build-space@v10
        with:
          swap-size-mb:
            description: 'Swap space to create, in Megabytes.'
            required: false
            default: '4096'
          build-mount-path:
            description: 'Absolute path to the mount point where the build space will be available, defaults to $GITHUB_WORKSPACE if unset.'
            required: false
          pv-loop-path:
            description: 'Absolute file path for the LVM image created on the root filesystem, the default is usually fine.'
            required: false
            default: '/pv.img'
          tmp-pv-loop-path:
            description: 'Absolute file path for the LVM image created on the temp filesystem, the default is usually fine. Must reside on /mnt'
            required: false
            default: '/mnt/tmp-pv.img'
          remove-dotnet:
            description: 'Removes .NET runtime and libraries.'
            required: false
            default: 'true'
          remove-android:
            description: 'Removes Android SDKs and Tools.'
            required: false
            default: 'true'
          remove-haskell:
            description: 'Removes GHC (Haskell) artifacts.'
            required: false
            default: 'true'
          remove-codeql:
            description: 'Removes CodeQL Action Bundles.'
            required: false
            default: 'true'
          remove-docker-images:
            description: 'Removes cached Docker images.'
            required: false
            default: 'true'
            
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Source Build Env
        id: source-build-env
        run: |
          cat ./build.env >> $GITHUB_ENV
          echo "APPS_JSON_BASE64=$(base64 -w 0 ./apps.json)" >> $GITHUB_ENV
          echo GITHUB_ENV

      - uses: actions/checkout@v4
        with:
          repository: frappe/frappe_docker
          path: builds

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64/v8
          push: true
          context: builds
          file: builds/images/custom/Containerfile
          tags: sudhegan/frappe-withapps:v15,sudhegan/frappe-withapps:latest
          build-args: |
            "FRAPPE_PATH=${{ env.FRAPPE_REPO }}"
            "FRAPPE_BRANCH=${{ env.FRAPPE_VERSION }}"
            "PYTHON_VERSION=${{ env.PY_VERSION }}"
            "NODE_VERSION=${{ env.NODEJS_VERSION }}"
            "APPS_JSON_BASE64=${{ env.APPS_JSON_BASE64 }}"
